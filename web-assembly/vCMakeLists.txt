set(OPENCV_DIR "/opt/homebrew/Cellar/opencv/4.5.5")

cmake_minimum_required(VERSION 3.22)
project(object_detector_on_image_cpp)

# Use C++ 17 by default
set(CMAKE_CXX_STANDARD 17)

# Set Release as default build type
# if(NOT CMAKE_BUILD_TYPE)
#     set(CMAKE_BUILD_TYPE Release)
# endif(NOT CMAKE_BUILD_TYPE)

# Does not work
# find_package(OpenCV REQUIRED PATHS "${OPENCV_DIR}/build_wasm" NO_DEFAULT_PATH)

# Needed for opencv2/opencv.hpp
# include_directories("${OPENCV_DIR}/include")

# Needed by opencv.hpp for opencv2/opencv_modules.hpp
# include_directories("${OPENCV_DIR}/build_wasm")

# Needed by opencv_modules.hpp for every module
file(GLOB opencv_include_modules "${OPENCV_DIR}/include/opencv4")
include_directories(${opencv_include_modules})

# Our object_detector_on_image_cpp world executable
add_executable(object_detector_on_image_cpp src/brisk-detector.cpp)

# Link to opencv.js precompiled libraries
# file(GLOB opencv_libs "${OPENCV_DIR}/lib/*.a")
# target_link_libraries(object_detector_on_image_cpp ${opencv_libs})

# There is an issue regarding the order in which libraries
# are passed to the compiler - pass libopencv_core.a last
# https://answers.opencv.org/question/186124/undefined-reference-to-cvsoftdoubleoperator/
# file(GLOB opencv_lib_core "${OPENCV_DIR}/lib/libopencv_core.a")
# target_link_libraries(object_detector_on_image_cpp ${opencv_lib_core})

set(LINK_FLAGS -s WASM=1 -s EXPORTED_FUNCTIONS='["_detect"]')

# Specify linker arguments
set_target_properties(object_detector_on_image_cpp PROPERTIES LINK_FLAGS "${LINK_FLAGS}")

# Set this if you want to to generate sample html file
set(CMAKE_EXECUTABLE_SUFFIX ".html")